# %%
import fastf1


# %%
#‡∏•‡∏≠‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏ö‡∏Å‡∏ò‡∏á‡∏î‡∏π‡πÄ‡∏â‡∏¢ ‡πÜ ‡∏™‡∏á‡∏™‡∏±‡∏¢
session = fastf1.get_session(2023, 'Australian', 'R')
session.load()
track_status = session.track_status
print(track_status)

#%%
"""‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô: ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤"""
"""MP"""
# ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á fastf1 ‡∏Å‡πà‡∏≠‡∏ô‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
# pip install fastf1

import fastf1
from fastf1 import plotting
import matplotlib.pyplot as plt

# ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏Ñ‡∏ä # ‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÅ‡∏Ñ‡∏ä
fastf1.Cache.enable_cache('./cache')  

# ‡πÇ‡∏´‡∏•‡∏î session (‡πÄ‡∏ä‡πà‡∏ô ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏±‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡∏≠‡∏á Bahrain 2023)
session = fastf1.get_session(2023, 'Azerbaijan', 'Q')  # 'Q' = Qualifying, 'R' = Race
session.load()

# ‡πÇ‡∏´‡∏•‡∏î session 
session = fastf1.get_session(2023, 'Bahrain', 'Q')  # 'Q' = Qualifying, 'R' = Race
session.load()

# ‡πÇ‡∏´‡∏•‡∏î session 
session = fastf1.get_session(2024, 'Bahrain', 'R')  # 'Q' = Qualifying, 'R' = Race
session.load()

#%%
"""‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ô‡∏±‡∏Å‡πÅ‡∏Ç‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"""
import fastf1
fastf1.Cache.enable_cache('./cache')  # ‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á cache ‡∏î‡πâ‡∏ß‡∏¢

# ‡πÇ‡∏´‡∏•‡∏î session
session = fastf1.get_session(2023, 'Bahrain', 'Q')  # 'Q' = Qualifying
session.load()  # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏°‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô

#‡πÄ‡∏£‡∏¥‡πà‡∏° **‡πÉ‡∏ä‡πâdrivers = session.drivers ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏ö‡∏≤‡∏á session (‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞ Qualifying/Practice) ‡∏≠‡∏≤‡∏à ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏µ‡∏¢‡πå 'Team' ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ô‡∏±‡πâ‡∏ô
results = session.results

print("‡∏ô‡∏±‡∏Å‡πÅ‡∏Ç‡πà‡∏á‡πÉ‡∏ô session ‡∏ô‡∏µ‡πâ:")
for _, row in results.iterrows():
    print(f"{row['Abbreviation']}: {row['FullName']} - {row['TeamName']}")

# %%
"""‡∏≠‡∏¢‡∏≤‡∏Å‡∏£‡∏π‡πâ‡∏õ‡∏µ‡∏ô‡∏±‡πâ‡∏ô ‡∏°‡∏µ‡∏™‡∏ô‡∏≤‡∏°‡πÑ‡∏´‡∏ô‡∏ö‡πâ‡∏≤‡∏á"""
from fastf1 import events

# ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏õ‡∏µ 2023
schedule = events.get_event_schedule(2023)

# ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡∏ö‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢
for index, row in schedule.iterrows():
    print(f"{row['EventName']} - {row['Country']} ({row['Location']}) | ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: {row['EventDate'].date()}")

# %%
"""‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡πà‡∏≠‡∏£‡∏≠‡∏ö‡∏Ç‡∏≠‡∏á‡∏ô‡∏±‡∏Å‡πÅ‡∏Ç‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"""
#‡πÇ‡∏´‡∏•‡∏îsession ‡∏Å‡πà‡∏≠‡∏ô
import fastf1
import matplotlib.pyplot as plt

# ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô cache
fastf1.Cache.enable_cache('./cache')

# ‡πÇ‡∏´‡∏•‡∏î session (‡∏õ‡∏µ 2023 ‡∏™‡∏ô‡∏≤‡∏° Bahrain ‡∏£‡∏≠‡∏ö Qualifying)
session = fastf1.get_session(2023, 'Bahrain', 'Q')
session.load()  # ‡∏ï‡πâ‡∏≠‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Å‡πà‡∏≠‡∏ô‡∏ñ‡∏∂‡∏á‡∏à‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ

#‡πÄ‡∏£‡∏¥‡πà‡∏°
laps = session.laps
# ‡∏´‡∏≤‡∏£‡∏≠‡∏ö‡πÄ‡∏£‡πá‡∏ß‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ô‡∏±‡∏Å‡πÅ‡∏Ç‡πà‡∏á
fastest_laps = laps.pick_quicklaps().groupby('Driver').min().sort_values(by='LapTime')

print("‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡πà‡∏≠‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏£‡πá‡∏ß‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ô‡∏±‡∏Å‡πÅ‡∏Ç‡πà‡∏á:")
print(fastest_laps[['LapTime', 'Team']])

#%%
"""‡∏Å‡∏£‡∏≤‡∏ü‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡πà‡∏≠‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î"""
plotting.setup_mpl()  # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö F1

fastest_laps = fastest_laps.reset_index()

plt.figure(figsize=(10, 5))
plt.barh(fastest_laps['Driver'], fastest_laps['LapTime'].dt.total_seconds(), color='skyblue')
plt.xlabel("Lap Time (s)")
plt.title("Fastest Lap Time per Driver")
plt.gca().invert_yaxis()
plt.show()

#%%
"""‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡∏≠‡∏á‡∏ô‡∏±‡∏Å‡πÅ‡∏Ç‡πà‡∏á‡∏ö‡∏≤‡∏á‡∏Ñ‡∏ô"""
# ‡πÄ‡∏ä‡πà‡∏ô ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≠‡∏ö‡∏Ç‡∏≠‡∏á Max Verstappen
laps_ver = laps.pick_driver('VER')
print(laps_ver[['LapNumber', 'LapTime', 'Compound', 'Stint']])

# %%
"""‡∏ß‡∏≤‡∏î‡∏Å‡∏£‡∏≤‡∏ü‡πÅ‡∏™‡∏î‡∏á ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏£‡∏ñ (Speed) ‡∏Ç‡∏≠‡∏á Charles Leclerc ‡πÉ‡∏ô‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏£‡πá‡∏ß‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡∏£‡∏≠‡∏ö Qualifying ‡∏ó‡∏µ‡πà Monza ‡∏õ‡∏µ 2019"""
from matplotlib import pyplot as plt
import fastf1
import fastf1.plotting
#‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ò‡∏µ‡∏°‡∏Ç‡∏≠‡∏á‡∏Å‡∏£‡∏≤‡∏ü‡πÉ‡∏´‡πâ‡∏î‡∏π‡πÅ‡∏ô‡∏ß F1 ‡πÄ‡∏ó‡πà ‡πÜ (‡∏™‡∏µ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏£‡∏≤‡∏ü‡∏à‡∏£‡∏¥‡∏á ‡πÜ ‡∏Ç‡∏≠‡∏á F1TV)
fastf1.plotting.setup_mpl(misc_mpl_mods=False, color_scheme='fastf1')
#session.load() = ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á session ‡∏ô‡∏±‡πâ‡∏ô (‡πÄ‡∏ä‡πà‡∏ô lap, car data, telemetry)
session = fastf1.get_session(2019, 'Monza', 'Q')
session.load()

"""!!!‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Å‡∏±‡∏ö‡∏ô‡∏±‡∏Å‡πÅ‡∏Ç‡πà‡∏á‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô"""
# Leclerc
fast_leclerc = session.laps.pick_drivers('LEC').pick_fastest()
lec_car_data = fast_leclerc.get_car_data()
t = lec_car_data['Time']
vCar = lec_car_data['Speed']

# Hamilton
fast_ham = session.laps.pick_drivers('HAM').pick_fastest()
ham_car_data = fast_ham.get_car_data()
t2 = ham_car_data['Time']
v2 = ham_car_data['Speed']

# Plot ‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏≠‡∏á‡∏Ñ‡∏ô‡πÉ‡∏ô‡∏Å‡∏£‡∏≤‡∏ü‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô
fig, ax = plt.subplots()
ax.plot(t, vCar, label='Leclerc', color='red')
ax.plot(t2, v2, label='Hamilton', color='blue')

ax.set_xlabel('Time')
ax.set_ylabel('Speed [Km/h]')
ax.set_title('Fastest Lap Speed - Leclerc vs Hamilton')
ax.legend()
plt.show()

# %%
"""‡∏´‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏£‡∏ñ P"""
import fastf1
session = fastf1.get_session(2023, 'Monza', 'Q')  # ‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏µ/‡∏™‡∏ô‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
session.load()

results = session.results
print(results[['Position','FullName']])

# %%
"""‡∏õ‡∏µ‡∏ô‡∏±‡πâ‡∏ô ‡πÄ‡∏≠‡∏≤‡∏ó‡∏∏‡∏Å‡∏™‡∏ô‡∏≤‡∏°‡∏•‡∏á‡πÉ‡∏ôcache"""
import fastf1
from time import sleep

# ‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î cache: ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏™‡πà‡∏Å‡πà‡∏≠‡∏ô load ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
fastf1.Cache.enable_cache('cache')  # ‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ

year = 2023
schedule = fastf1.get_event_schedule(year)

# üèÅ ‡∏ß‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≠‡∏ö Race ('R') ‡∏Ç‡∏≠‡∏á‡∏ó‡∏∏‡∏Å‡∏™‡∏ô‡∏≤‡∏°‡πÉ‡∏ô‡∏õ‡∏µ‡∏ô‡∏±‡πâ‡∏ô
for i, row in schedule.iterrows():
    round_number = row['RoundNumber']
    event_name = row['EventName']
    
    try:
        print(f"\nüì¶ Loading RACE for {event_name} (Round {round_number})...")
        session = fastf1.get_session(year, round_number, 'R')
        session.load()  # üíæ ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡πÄ‡∏ã‡∏ü‡πÄ‡∏Ç‡πâ‡∏≤ cache

        print("‚úÖ Cached successfully.")
        sleep(2)  # ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏ñ‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡∏à‡∏ô‡πÇ‡∏î‡∏ô block

    except Exception as e:
        print(f"‚ùå Failed to load {event_name}: {e}")

# %%
"""check ‡∏ß‡πà‡∏≤‡πÅ‡∏ï‡πà‡∏•‡∏∞ object ‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∞‡πÑ‡∏£‡πÑ‡∏î‡πâ‡∏ö‡πâ‡∏≤‡∏á"""
import fastf1
session = fastf1.get_session(2023, 'Monza', 'Q')  # ‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏µ/‡∏™‡∏ô‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
session.load()

#‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á object laps
session.laps.columns
#‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á object results
session.results.columns

#%%
import fastf1
from time import sleep

# ‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î cache: ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏™‡πà‡∏Å‡πà‡∏≠‡∏ô load ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
fastf1.Cache.enable_cache('cache')  # ‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ

year = 2021
schedule = fastf1.get_event_schedule(year)

# üèÅ ‡∏ß‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≠‡∏ö Race ('R') ‡∏Ç‡∏≠‡∏á‡∏ó‡∏∏‡∏Å‡∏™‡∏ô‡∏≤‡∏°‡πÉ‡∏ô‡∏õ‡∏µ‡∏ô‡∏±‡πâ‡∏ô
for i, row in schedule.iterrows():
    round_number = row['RoundNumber']
    event_name = row['EventName']
    
    try:
        print(f"\nüì¶ Loading RACE for {event_name} (Round {round_number})...")
        session = fastf1.get_session(year, round_number, 'R')
        session.load()  # üíæ ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡πÄ‡∏ã‡∏ü‡πÄ‡∏Ç‡πâ‡∏≤ cache

        print("‚úÖ Cached successfully.")
        sleep(2)  # ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏ñ‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡∏à‡∏ô‡πÇ‡∏î‡∏ô block

    except Exception as e:
        print(f"‚ùå Failed to load {event_name}: {e}")

# %%
import fastf1
from time import sleep


fastf1.Cache.enable_cache('cache')

year = 2022
schedule = fastf1.get_event_schedule(year)

for i, row in schedule.iterrows():
    round_number = row['RoundNumber']
    event_name = row['EventName']
    
    try:
        print(f"\nüì¶ Loading RACE for {event_name} (Round {round_number})...")
        session = fastf1.get_session(year, round_number, 'R')
        session.load()  # üíæ ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡πÄ‡∏ã‡∏ü‡πÄ‡∏Ç‡πâ‡∏≤ cache

        print("‚úÖ Cached successfully.")
        sleep(2)  # ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏ñ‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡∏à‡∏ô‡πÇ‡∏î‡∏ô block

    except Exception as e:
        print(f"‚ùå Failed to load {event_name}: {e}")

#%%
import fastf1
from time import sleep

fastf1.Cache.enable_cache('cache')
year = 2024
schedule = fastf1.get_event_schedule(year)

for i, row in schedule.iterrows():
    round_number = row['RoundNumber']
    event_name = row['EventName']
    
    try:
        print(f"\nüì¶ Loading RACE for {event_name} (Round {round_number})...")
        session = fastf1.get_session(year, round_number, 'R')
        session.load()  # üíæ ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡πÄ‡∏ã‡∏ü‡πÄ‡∏Ç‡πâ‡∏≤ cache

        print("‚úÖ Cached successfully.")
        sleep(2)  # ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏ñ‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡∏à‡∏ô‡πÇ‡∏î‡∏ô block

    except Exception as e:
        print(f"‚ùå Failed to load {event_name}: {e}")

#%%
import fastf1
from time import sleep

fastf1.Cache.enable_cache('cache')
year = 2024
schedule = fastf1.get_event_schedule(year)
year = 2025
schedule = fastf1.get_event_schedule(year)

for i, row in schedule.iterrows():
    round_number = row['RoundNumber']
    event_name = row['EventName']
    
    try:
        print(f"\nüì¶ Loading RACE for {event_name} (Round {round_number})...")
        session = fastf1.get_session(year, round_number, 'R')
        session.load()  # üíæ ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡πÄ‡∏ã‡∏ü‡πÄ‡∏Ç‡πâ‡∏≤ cache

        print("‚úÖ Cached successfully.")
        sleep(2)  # ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏ñ‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡∏à‡∏ô‡πÇ‡∏î‡∏ô block

    except Exception as e:
        print(f"‚ùå Failed to load {event_name}: {e}")
